% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lift_over.R
\name{lift_over}
\alias{lift_over}
\title{Lift over genomic coordinates between genome builds}
\usage{
lift_over(variants, lift_over_chain)
}
\arguments{
\item{variants}{A data frame containing variant/genomic position data with columns:
\describe{
\item{chr}{Chromosome}
\item{pos}{Position (for single positions)}
\item{start, end}{Start and end positions (for genomic ranges)}
\item{...}{Additional columns will be preserved in the output}
}
Must contain either \code{pos} column OR both \code{start} and \code{end} columns.}

\item{lift_over_chain}{Path to the liftOver chain file for coordinate conversion
between genome builds (e.g., hg19 to hg38).}
}
\value{
A data frame with lifted coordinates and all original columns preserved.
For range data: \code{start} and \code{end} columns contain the new coordinates.
For position data: \code{pos} column contains the new coordinates.
Only successfully lifted coordinates are returned.
}
\description{
Converts genomic coordinates from one genome build to another using a liftOver
chain file. The function handles both single position variants and genomic ranges,
automatically detecting the input format and maintaining all original data.
}
\details{
The function performs the following operations:
\itemize{
\item Automatically detects input format (single positions vs ranges)
\item Converts data to GenomicRanges object for liftOver processing
\item Applies coordinate conversion using the specified chain file
\item Filters to successfully lifted coordinates only
\item Rejoins lifted coordinates with original variant data
\item Returns data with updated coordinates and all original columns
}

The function uses an inner join, so only variants that successfully lift over
will be included in the output. Variants that fail to lift over are excluded.
}
\examples{
\dontrun{
library(GenomicRanges)
library(rtracklayer)
library(dplyr)

# Example with single positions
variants_pos <- data.frame(
  chr = c("chr1", "chr2", "chr3"),
  pos = c(1000000, 2000000, 3000000),
  ref = c("A", "G", "C"),
  alt = c("T", "C", "A")
)

# Lift over from hg19 to hg38
lifted_pos <- lift_over(variants_pos, "hg19ToHg38.over.chain")

# Example with genomic ranges
variants_range <- data.frame(
  chr = c("chr1", "chr2"),
  start = c(1000000, 2000000),
  end = c(1000100, 2000100),
  gene = c("GENE1", "GENE2")
)

lifted_range <- lift_over(variants_range, "hg19ToHg38.over.chain")
}

}
